{"version":3,"file":"static/js/885.ef0d44c9.chunk.js","mappings":"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","sources":["components/nearbyShops/NearbyShops.js","../node_modules/react-bootstrap/esm/CardImg.js","../node_modules/react-bootstrap/esm/CardHeader.js","../node_modules/react-bootstrap/esm/Card.js"],"sourcesContent":["import { Card, Button } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Spinner from \"../Spinner/Spinner\";\r\nimport \"./nearbyShops.scss\";\r\nconst NearbyShops = ({ shops }) => {\r\n  function renderItems(arr) {\r\n    console.log(arr);\r\n    const items = arr.map((item, i) => {\r\n      return (\r\n        <li tabIndex={0} key={item.id}>\r\n          <Card style={{ width: \"12rem\", margin: \"50px\" }}>\r\n            <Card.Img\r\n              variant=\"top\"\r\n              alt={item.name}\r\n              src={item.photos[0].html_attributions[0].slice(9, 67)}\r\n            />\r\n            <Card.Body>\r\n              <Card.Title>{item.name}</Card.Title>\r\n              <Card.Subtitle>{item.rating}/10</Card.Subtitle>\r\n              <Card.Text>{item.formatted_address}</Card.Text>\r\n              <Link to={`/products/${item.id}`}>\r\n                <Button variant=\"outline-primary\">Learn more</Button>\r\n              </Link>{\" \"}\r\n            </Card.Body>\r\n          </Card>\r\n        </li>\r\n      );\r\n    });\r\n    return <ul style={{ display: \"-ms-grid\" }}>{items}</ul>;\r\n  }\r\n  let element = <Spinner />;\r\n  if (shops.placesDetails && shops.placesDetails.length > 0) {\r\n    element = renderItems(shops.placesDetails);\r\n  }\r\n  return <div className=\"list\">{element}</div>;\r\n};\r\n\r\nexport default NearbyShops;\r\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardImg = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  variant,\n  as: Component = 'img',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(variant ? `${prefix}-${variant}` : prefix, className),\n    ...props\n  });\n});\nCardImg.displayName = 'CardImg';\nexport default CardImg;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CardHeaderContext from './CardHeaderContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-header');\n  const contextValue = useMemo(() => ({\n    cardHeaderBsPrefix: prefix\n  }), [prefix]);\n  return /*#__PURE__*/_jsx(CardHeaderContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, prefix)\n    })\n  });\n});\nCardHeader.displayName = 'CardHeader';\nexport default CardHeader;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nimport CardImg from './CardImg';\nimport CardHeader from './CardHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH5 = divWithClassName('h5');\nconst DivStyledAsH6 = divWithClassName('h6');\nconst CardBody = createWithBsPrefix('card-body');\nconst CardTitle = createWithBsPrefix('card-title', {\n  Component: DivStyledAsH5\n});\nconst CardSubtitle = createWithBsPrefix('card-subtitle', {\n  Component: DivStyledAsH6\n});\nconst CardLink = createWithBsPrefix('card-link', {\n  Component: 'a'\n});\nconst CardText = createWithBsPrefix('card-text', {\n  Component: 'p'\n});\nconst CardFooter = createWithBsPrefix('card-footer');\nconst CardImgOverlay = createWithBsPrefix('card-img-overlay');\nconst Card = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  bg,\n  text,\n  border,\n  body = false,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, bg && `bg-${bg}`, text && `text-${text}`, border && `border-${border}`),\n    children: body ? /*#__PURE__*/_jsx(CardBody, {\n      children: children\n    }) : children\n  });\n});\nCard.displayName = 'Card';\nexport default Object.assign(Card, {\n  Img: CardImg,\n  Title: CardTitle,\n  Subtitle: CardSubtitle,\n  Body: CardBody,\n  Link: CardLink,\n  Text: CardText,\n  Header: CardHeader,\n  Footer: CardFooter,\n  ImgOverlay: CardImgOverlay\n});"],"names":["_ref","shops","element","_jsx","Spinner","placesDetails","length","arr","console","log","items","map","item","i","tabIndex","children","_jsxs","Card","style","width","margin","Img","variant","alt","name","src","photos","html_attributions","slice","Body","Title","Subtitle","rating","Text","formatted_address","Link","to","concat","id","Button","display","renderItems","className","CardImg","React","ref","bsPrefix","_ref$as","as","Component","props","_objectWithoutProperties","_excluded","prefix","useBootstrapPrefix","_objectSpread","classNames","displayName","CardHeader","contextValue","useMemo","cardHeaderBsPrefix","CardHeaderContext","Provider","value","DivStyledAsH5","divWithClassName","DivStyledAsH6","CardBody","createWithBsPrefix","CardTitle","CardSubtitle","CardLink","CardText","CardFooter","CardImgOverlay","bg","text","border","_ref$body","body","Object","assign","Header","Footer","ImgOverlay"],"sourceRoot":""}